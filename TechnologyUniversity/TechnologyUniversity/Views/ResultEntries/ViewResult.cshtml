@model IEnumerable<TechnologyUniversity.Models.ResultEntry>
@{
    
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p class="text-center">
    <font size=7> Student Result </font>
</p>
<br/>


@using (Html.BeginForm())
{

    <form class="form-horizontal" role="form">
        <p class="text-center">
            <div class="form-group">
                <div class="col-sm-10">
                    @Html.DropDownList("StudentId", null, "Select Student", htmlAttributes: new { @class = "form-control" , @style = "text-align : center" })
                </div>
            </div>
        </p>

    </form>
       
}

<div class="row">
    <div style="min-height:100px;">
        <div class="col-xs-9">
        </div>
        <div class="col-xs-3">
            <button type="submit" class="btn btn-default btn-lg pull-right" onclick="javascript:demoFromHTML();">
                <img src="~/images/PDFLOGO.png" alt="Create PDF" />
            </button>
        </div>
    </div>
</div>


<div class="form-group" id="studentResult">

    <div id="studentInfo">
        @Html.Partial("~/Views/shared/_studentInformation.cshtml")
    </div>
     <p><br /></p>
     <div id="result_Data">
        @Html.Partial("~/Views/Shared/_ResultInformation.cshtml")
     </div>

</div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")


            <script src="~/Scripts/jspdf.debug.js"></script>

            <script type="text/javascript">
                function FillData(id) {
                    $('#studentInfo').load('@Url.Action("StudentInfoLoad")', { studentId: id });
                    $('#result_Data').load('@Url.Action("ResultInfoLoad")', { studentId: id });
                }

                $(function () {
                    $('#StudentId').change(function () {
                        var id = $('#StudentId').val();
                        FillData(id);
                    });
                });

            </script>

            <script>
                function demoFromHTML() {
                    var pdf = new jsPDF('p', 'pt', 'letter');
                    // source can be HTML-formatted string, or a reference
                    // to an actual DOM element from which the text will be scraped.
                    source = $('#studentResult')[0];

                    // we support special element handlers. Register them with jQuery-style
                    // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
                    // There is no support for any other type of selectors
                    // (class, of compound) at this time.
                    specialElementHandlers = {
                        // element with id of "bypass" - jQuery style selector
                        '#bypassme': function (element, renderer) {
                            // true = "handled elsewhere, bypass text extraction"
                            return true
                        }
                    };
                    margins = {
                        top: 80,
                        bottom: 60,
                        left: 40,
                        width: 522
                    };
                    // all coords and widths are in jsPDF instance's declared units
                    // 'inches' in this case
                    pdf.fromHTML(
                        source, // HTML string or DOM elem ref.
                        margins.left, // x coord
                        margins.top, {
                            // y coord
                            'width': margins.width, // max width of content on PDF
                            'elementHandlers': specialElementHandlers
                        },
                        function (dispose) {
                            // dispose: object with X, Y of the last line add to the PDF
                            //          this allow the insertion of new lines after html
                            pdf.save('Test.pdf');
                        }, margins);
                }
            </script>
        }
